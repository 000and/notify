local UILibrary = {}

-- Variável global para rastrear a janela atual
local currentWindow = nil

-- Função para criar a janela principal (pequena e no canto superior)
function UILibrary:NewWindow(windowTitle)
    -- Se já existir uma janela aberta, deletar
    if currentWindow then
        currentWindow:Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    local mainFrame = Instance.new("Frame")
    local titleLabel = Instance.new("TextLabel")
    local toggleButton = Instance.new("TextButton")
    local closeButton = Instance.new("TextButton")
    local uiCorner = Instance.new("UICorner")
    local uiListLayout = Instance.new("UIListLayout")

    -- Configurações do ScreenGui
    screenGui.Name = "CustomUI"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false

    -- Frame da janela principal (pequena e no canto superior)
    mainFrame.Name = "MainFrame"
    mainFrame.Parent = screenGui
    mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    mainFrame.Size = UDim2.new(0, 200, 0, 40) -- Pequeno
    mainFrame.Position = UDim2.new(0, 10, 0, 10) -- Canto superior esquerdo
    mainFrame.Active = true
    mainFrame.Draggable = true

    -- Guardando a janela como a atual aberta
    currentWindow = screenGui

    -- Layout para organizar as seções verticalmente
    uiListLayout.Parent = mainFrame
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Padding = UDim.new(0, 10)

    -- Label do título da janela
    titleLabel.Name = "TitleLabel"
    titleLabel.Parent = mainFrame
    titleLabel.Text = windowTitle
    titleLabel.Size = UDim2.new(1, -60, 0, 40)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 18
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    -- Botão para abrir e fechar a janela
    toggleButton.Name = "ToggleButton"
    toggleButton.Parent = mainFrame
    toggleButton.Text = "+"
    toggleButton.Size = UDim2.new(0, 30, 0, 30)
    toggleButton.Position = UDim2.new(1, -65, 0, 5)
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextSize = 18

    local toggleButtonCorner = Instance.new("UICorner")
    toggleButtonCorner.CornerRadius = UDim.new(1, 0)
    toggleButtonCorner.Parent = toggleButton

    -- Botão para fechar a janela (botão X)
    closeButton.Name = "CloseButton"
    closeButton.Parent = mainFrame
    closeButton.Text = "X"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = 18

    local closeButtonCorner = Instance.new("UICorner")
    closeButtonCorner.CornerRadius = UDim.new(1, 0)
    closeButtonCorner.Parent = closeButton

    -- Bordas arredondadas
    uiCorner.CornerRadius = UDim.new(0, 10)
    uiCorner.Parent = mainFrame

    -- Função para abrir e fechar a janela
    local isOpen = false
    toggleButton.MouseButton1Click:Connect(function()
        if isOpen then
            mainFrame:TweenSize(UDim2.new(0, 200, 0, 40), "Out", "Quad", 0.3, true) -- Fecha a janela
            toggleButton.Text = "+"
        else
            mainFrame:TweenSize(UDim2.new(0, 200, 0, 200), "Out", "Quad", 0.3, true) -- Abre a janela
            toggleButton.Text = "-"
        end
        isOpen = not isOpen
    end)

    -- Função para fechar a janela (apaga o GUI inteiro)
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
        currentWindow = nil -- Reseta a variável global
    end)

    -- Função para criar seções na janela
    local window = {}
    function window:NewSection(sectionTitle)
        local sectionFrame = Instance.new("Frame")
        local sectionLabel = Instance.new("TextLabel")
        local sectionToggle = Instance.new("TextButton")
        local contentFrame = Instance.new("Frame")
        local uiListLayout = Instance.new("UIListLayout")

        -- Frame da seção
        sectionFrame.Parent = mainFrame
        sectionFrame.Size = UDim2.new(1, 0, 0, 40)
        sectionFrame.BackgroundTransparency = 1

        -- Label do título da seção
        sectionLabel.Parent = sectionFrame
        sectionLabel.Text = sectionTitle
        sectionLabel.Size = UDim2.new(1, -30, 0, 40)
        sectionLabel.BackgroundTransparency = 1
        sectionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        sectionLabel.Font = Enum.Font.SourceSansBold
        sectionLabel.TextSize = 18
        sectionLabel.TextXAlignment = Enum.TextXAlignment.Left

        -- Botão para abrir e fechar a seção
        sectionToggle.Parent = sectionFrame
        sectionToggle.Text = "+"
        sectionToggle.Size = UDim2.new(0, 30, 0, 30)
        sectionToggle.Position = UDim2.new(1, -35, 0, 5)
        sectionToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        sectionToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        sectionToggle.Font = Enum.Font.SourceSansBold
        sectionToggle.TextSize = 18

        -- Frame de conteúdo da seção (escondido por padrão)
        contentFrame.Parent = sectionFrame
        contentFrame.Size = UDim2.new(1, 0, 0, 0)
        contentFrame.Position = UDim2.new(0, 0, 1, 0)
        contentFrame.BackgroundTransparency = 1
        contentFrame.ClipsDescendants = true

        -- Layout para organizar o conteúdo dentro da seção
        uiListLayout.Parent = contentFrame
        uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        uiListLayout.Padding = UDim.new(0, 5)

        -- Função para abrir e fechar a seção
        local sectionOpen = false
        sectionToggle.MouseButton1Click:Connect(function()
            if sectionOpen then
                contentFrame:TweenSize(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.3, true) -- Fecha a seção
                sectionToggle.Text = "+"
            else
                contentFrame:TweenSize(UDim2.new(1, 0, 0, 100), "Out", "Quad", 0.3, true) -- Abre a seção
                sectionToggle.Text = "-"
            end
            sectionOpen = not sectionOpen
        end)

        -- Funções para criar elementos dentro da seção
        local section = {}
        
        -- Função para criar botões
        function section:CreateButton(buttonText, callback)
            local button = Instance.new("TextButton")
            local buttonCorner = Instance.new("UICorner")

            button.Parent = contentFrame
            button.Text = buttonText
            button.Size = UDim2.new(1, -10, 0, 40)
            button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.Font = Enum.Font.SourceSans
            button.TextSize = 18
            button.TextScaled = true

            buttonCorner.CornerRadius = UDim.new(0, 10)
            buttonCorner.Parent = button

            button.MouseButton1Click:Connect(function()
                callback()
            end)
        end

        -- Função para criar toggles (botões de alternância)
        function section:CreateToggle(toggleText, callback)
            local toggle = Instance.new("TextButton")
            local toggleCorner = Instance.new("UICorner")

            toggle.Parent = contentFrame
            toggle.Text = toggleText
            toggle.Size = UDim2.new(1, -10, 0, 40)
            toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
            toggle.Font = Enum.Font.SourceSans
            toggle.TextSize = 18
            toggle.TextScaled = true

            toggleCorner.CornerRadius = UDim.new(0, 10)
            toggleCorner.Parent = toggle

            local toggleState = false
            toggle.MouseButton1Click:Connect(function()
                toggleState = not toggleState
                callback(toggleState)
            end)
        end

        return section
    end

    return window
end

return UILibrary
